{"ast":null,"code":"import * as api from '../api';\nexport const getPosts = () => async dispatch => {\n  try {\n    //response\n    const {\n      data\n    } = await api.fetchPosts();\n    dispatch({\n      type: 'FETCH_ALL',\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const createPost = post => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.createPost(post);\n    dispatch({\n      type: 'CREATE',\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const updatePost = (id, post) => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.updatePost(id, post); // console.log(\"id\", id);\n    // console.log(\"post\", post)\n\n    dispatch({\n      type: 'UPDATE',\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const deletePost = id => async dispatch => {\n  try {\n    await api.deletePost(id);\n    dispatch({\n      type: 'DELETE',\n      payload: id\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const likePost = id => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.likePost(id);\n  } catch (error) {}\n};","map":{"version":3,"sources":["C:/Users/Legion/Desktop/Frontend/be-social/client/src/actions/posts.js"],"names":["api","getPosts","dispatch","data","fetchPosts","type","payload","error","console","log","createPost","post","updatePost","id","deletePost","likePost"],"mappings":"AAAA,OAAO,KAAKA,GAAZ,MAAqB,QAArB;AAGA,OAAO,MAAMC,QAAQ,GAAG,MAAM,MAAOC,QAAP,IAAoB;AAEhD,MAAI;AACF;AACA,UAAM;AAACC,MAAAA;AAAD,QAAS,MAAMH,GAAG,CAACI,UAAJ,EAArB;AAEAF,IAAAA,QAAQ,CAAC;AAACG,MAAAA,IAAI,EAAE,WAAP;AAAoBC,MAAAA,OAAO,EAAEH;AAA7B,KAAD,CAAR;AACD,GALD,CAKE,OAAOI,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACF,CAVM;AAYP,OAAO,MAAMG,UAAU,GAAIC,IAAD,IAAU,MAAOT,QAAP,IAAoB;AACtD,MAAI;AACF,UAAM;AAACC,MAAAA;AAAD,QAAS,MAAMH,GAAG,CAACU,UAAJ,CAAeC,IAAf,CAArB;AACAT,IAAAA,QAAQ,CAAC;AAACG,MAAAA,IAAI,EAAE,QAAP;AAAiBC,MAAAA,OAAO,EAAEH;AAA1B,KAAD,CAAR;AACD,GAHD,CAGE,OAAOI,KAAP,EAAc;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;AACF,CAPM;AAQP,OAAO,MAAMK,UAAU,GAAG,CAACC,EAAD,EAAKF,IAAL,KAAc,MAAOT,QAAP,IAAoB;AAC1D,MAAI;AACF,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMH,GAAG,CAACY,UAAJ,CAAeC,EAAf,EAAmBF,IAAnB,CAAvB,CADE,CAEF;AACA;;AACAT,IAAAA,QAAQ,CAAC;AAAEG,MAAAA,IAAI,EAAE,QAAR;AAAkBC,MAAAA,OAAO,EAAEH;AAA3B,KAAD,CAAR;AACD,GALD,CAKE,OAAOI,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACF,CATM;AAWP,OAAO,MAAMO,UAAU,GAAID,EAAD,IAAQ,MAAMX,QAAN,IAAmB;AACnD,MAAG;AACD,UAAMF,GAAG,CAACc,UAAJ,CAAeD,EAAf,CAAN;AACAX,IAAAA,QAAQ,CAAC;AAACG,MAAAA,IAAI,EAAE,QAAP;AAAiBC,MAAAA,OAAO,EAAEO;AAA1B,KAAD,CAAR;AACD,GAHD,CAGC,OAAON,KAAP,EAAc;AACbC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACF,CAPM;AASP,OAAO,MAAMQ,QAAQ,GAAIF,EAAD,IAAQ,MAAMX,QAAN,IAAmB;AAEjD,MAAI;AACF,UAAM;AAACC,MAAAA;AAAD,QAAS,MAAMH,GAAG,CAACe,QAAJ,CAAaF,EAAb,CAArB;AAED,GAHD,CAGC,OAAON,KAAP,EAAc,CAEd;AAEF,CATM","sourcesContent":["import * as api from '../api';\r\n\r\n\r\nexport const getPosts = () => async (dispatch) => {\r\n\r\n  try {\r\n    //response\r\n    const {data} = await api.fetchPosts();\r\n\r\n    dispatch({type: 'FETCH_ALL', payload: data});\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n}\r\n\r\nexport const createPost = (post) => async (dispatch) => {\r\n  try {\r\n    const {data} = await api.createPost(post);\r\n    dispatch({type: 'CREATE', payload: data});\r\n  } catch (error) {\r\n      console.log(error);\r\n  }\r\n}\r\nexport const updatePost = (id, post) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.updatePost(id, post);\r\n    // console.log(\"id\", id);\r\n    // console.log(\"post\", post)\r\n    dispatch({ type: 'UPDATE', payload: data });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const deletePost = (id) => async(dispatch) => {\r\n  try{\r\n    await api.deletePost(id);\r\n    dispatch({type: 'DELETE', payload: id});\r\n  }catch (error) {\r\n    console.log(error);\r\n  }\r\n}\r\n\r\nexport const likePost = (id) => async(dispatch) => {\r\n\r\n  try {\r\n    const {data} = await api.likePost(id)\r\n\r\n  }catch (error) {\r\n\r\n  }\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module"}